node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_2/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_3/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_4/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_4/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_5/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DropoutWrapperInit_5/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range"
  op: "Range"
  input: "range/start"
  input: "Rank"
  input: "range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "concat/values_0"
  input: "range"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "input"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice_1"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice_1/stack"
  input: "rnn/strided_slice_1/stack_1"
  input: "rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/Const_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/concat_1"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/Const_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/concat_1"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/Const_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/concat_1"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/Const_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/concat_1"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/Const"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims_1"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/concat"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims_2"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/Const_2"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims_3"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/concat_1"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/Shape_1"
  op: "Shape"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice_2"
  op: "StridedSlice"
  input: "rnn/Shape_1"
  input: "rnn/strided_slice_2/stack"
  input: "rnn/strided_slice_2/stack_1"
  input: "rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice_3"
  op: "StridedSlice"
  input: "rnn/Shape_1"
  input: "rnn/strided_slice_3/stack"
  input: "rnn/strided_slice_3/stack_1"
  input: "rnn/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice_3"
  input: "rnn/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/concat"
  op: "ConcatV2"
  input: "rnn/ExpandDims"
  input: "rnn/Const"
  input: "rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/zeros"
  op: "Fill"
  input: "rnn/concat"
  input: "rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/TensorArray"
  op: "TensorArrayV3"
  input: "rnn/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "rnn/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "rnn/TensorArrayUnstack/Shape"
  input: "rnn/TensorArrayUnstack/strided_slice/stack"
  input: "rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "rnn/TensorArrayUnstack/range/start"
  input: "rnn/TensorArrayUnstack/strided_slice"
  input: "rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "rnn/TensorArray_1"
  input: "rnn/TensorArrayUnstack/range"
  input: "transpose"
  input: "rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Enter"
  op: "Enter"
  input: "rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_1"
  op: "Enter"
  input: "rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_2"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_3"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_4"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_5"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_6"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_7"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_2/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_8"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_9"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_3/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_10"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_11"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_4/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_12"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Enter_13"
  op: "Enter"
  input: "rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_5/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Merge"
  op: "Merge"
  input: "rnn/while/Enter"
  input: "rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_1"
  op: "Merge"
  input: "rnn/while/Enter_1"
  input: "rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_2"
  op: "Merge"
  input: "rnn/while/Enter_2"
  input: "rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_3"
  op: "Merge"
  input: "rnn/while/Enter_3"
  input: "rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_4"
  op: "Merge"
  input: "rnn/while/Enter_4"
  input: "rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_5"
  op: "Merge"
  input: "rnn/while/Enter_5"
  input: "rnn/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_6"
  op: "Merge"
  input: "rnn/while/Enter_6"
  input: "rnn/while/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_7"
  op: "Merge"
  input: "rnn/while/Enter_7"
  input: "rnn/while/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_8"
  op: "Merge"
  input: "rnn/while/Enter_8"
  input: "rnn/while/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_9"
  op: "Merge"
  input: "rnn/while/Enter_9"
  input: "rnn/while/NextIteration_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_10"
  op: "Merge"
  input: "rnn/while/Enter_10"
  input: "rnn/while/NextIteration_10"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_11"
  op: "Merge"
  input: "rnn/while/Enter_11"
  input: "rnn/while/NextIteration_11"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_12"
  op: "Merge"
  input: "rnn/while/Enter_12"
  input: "rnn/while/NextIteration_12"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Merge_13"
  op: "Merge"
  input: "rnn/while/Enter_13"
  input: "rnn/while/NextIteration_13"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Less/Enter"
  op: "Enter"
  input: "rnn/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/Less"
  op: "Less"
  input: "rnn/while/Merge"
  input: "rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/LoopCond"
  op: "LoopCond"
  input: "rnn/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch"
  op: "Switch"
  input: "rnn/while/Merge"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_1"
  op: "Switch"
  input: "rnn/while/Merge_1"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_2"
  op: "Switch"
  input: "rnn/while/Merge_2"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_3"
  op: "Switch"
  input: "rnn/while/Merge_3"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_4"
  op: "Switch"
  input: "rnn/while/Merge_4"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_5"
  op: "Switch"
  input: "rnn/while/Merge_5"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_6"
  op: "Switch"
  input: "rnn/while/Merge_6"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_7"
  op: "Switch"
  input: "rnn/while/Merge_7"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_8"
  op: "Switch"
  input: "rnn/while/Merge_8"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_9"
  op: "Switch"
  input: "rnn/while/Merge_9"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_10"
  op: "Switch"
  input: "rnn/while/Merge_10"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_11"
  op: "Switch"
  input: "rnn/while/Merge_11"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_12"
  op: "Switch"
  input: "rnn/while/Merge_12"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Switch_13"
  op: "Switch"
  input: "rnn/while/Merge_13"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Merge_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity"
  op: "Identity"
  input: "rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_1"
  op: "Identity"
  input: "rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_2"
  op: "Identity"
  input: "rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_3"
  op: "Identity"
  input: "rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_4"
  op: "Identity"
  input: "rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_5"
  op: "Identity"
  input: "rnn/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_6"
  op: "Identity"
  input: "rnn/while/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_7"
  op: "Identity"
  input: "rnn/while/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_8"
  op: "Identity"
  input: "rnn/while/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_9"
  op: "Identity"
  input: "rnn/while/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_10"
  op: "Identity"
  input: "rnn/while/Switch_10:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_11"
  op: "Identity"
  input: "rnn/while/Switch_11:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_12"
  op: "Identity"
  input: "rnn/while/Switch_12:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Identity_13"
  op: "Identity"
  input: "rnn/while/Switch_13:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "rnn/while/TensorArrayReadV3/Enter"
  input: "rnn/while/Identity"
  input: "rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\037\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.19933664798736572
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.19933664798736572
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/while/TensorArrayReadV3"
  input: "rnn/while/Identity_3"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/while/Identity_2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "<\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18257418274879456
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18257418274879456
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
  input: "rnn/while/Identity_5"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split:2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/while/Identity_4"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "<\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18257418274879456
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18257418274879456
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
  input: "rnn/while/Identity_7"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add/y"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split:2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/while/Identity_6"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/keep_prob"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/min"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/max"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/max"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/keep_prob"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Floor"
  op: "Floor"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div"
  op: "RealDiv"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "<\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18257418274879456
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18257418274879456
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul"
  input: "rnn/while/Identity_9"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add/y"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split:2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/while/Identity_8"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/keep_prob"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/min"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/max"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/max"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/keep_prob"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Floor"
  op: "Floor"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div"
  op: "RealDiv"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "<\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18257418274879456
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18257418274879456
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul"
  input: "rnn/while/Identity_11"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add/y"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split:2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/while/Identity_10"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/keep_prob"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/min"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/max"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/max"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/keep_prob"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Floor"
  op: "Floor"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div"
  op: "RealDiv"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "<\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18257418274879456
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18257418274879456
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "Add"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat/axis"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat"
  op: "ConcatV2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul"
  input: "rnn/while/Identity_13"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul"
  op: "MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Assign"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/read"
  op: "Identity"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  op: "BiasAdd"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Const"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split"
  op: "Split"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split/split_dim"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add/y"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split:2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul"
  op: "Mul"
  input: "rnn/while/Identity_12"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/keep_prob"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/min"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/max"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/sub"
  op: "Sub"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/max"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/RandomUniform"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/add"
  op: "Add"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/keep_prob"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Floor"
  op: "Floor"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div"
  op: "RealDiv"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul"
  op: "Mul"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "rnn/while/Identity"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul"
  input: "rnn/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/add/y"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/while/add"
  op: "Add"
  input: "rnn/while/Identity"
  input: "rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration"
  op: "NextIteration"
  input: "rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_6"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_7"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_8"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_9"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_10"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_11"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_12"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/NextIteration_13"
  op: "NextIteration"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit"
  op: "Exit"
  input: "rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_1"
  op: "Exit"
  input: "rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_2"
  op: "Exit"
  input: "rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_3"
  op: "Exit"
  input: "rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_4"
  op: "Exit"
  input: "rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_5"
  op: "Exit"
  input: "rnn/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_6"
  op: "Exit"
  input: "rnn/while/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_7"
  op: "Exit"
  input: "rnn/while/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_8"
  op: "Exit"
  input: "rnn/while/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_9"
  op: "Exit"
  input: "rnn/while/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_10"
  op: "Exit"
  input: "rnn/while/Switch_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_11"
  op: "Exit"
  input: "rnn/while/Switch_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_12"
  op: "Exit"
  input: "rnn/while/Switch_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/while/Exit_13"
  op: "Exit"
  input: "rnn/while/Switch_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "rnn/TensorArray"
  input: "rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/TensorArrayStack/range"
  op: "Range"
  input: "rnn/TensorArrayStack/range/start"
  input: "rnn/TensorArrayStack/TensorArraySizeV3"
  input: "rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "rnn/TensorArray"
  input: "rnn/TensorArrayStack/range"
  input: "rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 30
        }
      }
    }
  }
}
node {
  name: "rnn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "rnn/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "rnn/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/range"
  op: "Range"
  input: "rnn/range/start"
  input: "rnn/Rank"
  input: "rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "rnn/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/concat_1"
  op: "ConcatV2"
  input: "rnn/concat_1/values_0"
  input: "rnn/range"
  input: "rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "rnn/transpose"
  op: "Transpose"
  input: "rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "rnn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\036\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "rnn/transpose"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\036\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.4399413466453552
      }
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.4399413466453552
      }
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "fully_connected/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "fully_connected/weights/Initializer/random_uniform/max"
  input: "fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "fully_connected/weights/Initializer/random_uniform/RandomUniform"
  input: "fully_connected/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/random_uniform"
  op: "Add"
  input: "fully_connected/weights/Initializer/random_uniform/mul"
  input: "fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "fully_connected/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/biases/Assign"
  op: "Assign"
  input: "fully_connected/biases"
  input: "fully_connected/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/biases/read"
  op: "Identity"
  input: "fully_connected/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "Reshape"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "fully_connected/BiasAdd"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "output"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sub"
  op: "Sub"
  input: "Reshape_2"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Square"
  op: "Square"
  input: "mean_squared_error/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_squared_error/ToFloat_3/x"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Mul"
  op: "Mul"
  input: "mean_squared_error/Square"
  input: "mean_squared_error/ToFloat_3/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum"
  op: "Sum"
  input: "mean_squared_error/Mul"
  input: "mean_squared_error/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/num_present/Equal/y"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/Equal"
  op: "Equal"
  input: "mean_squared_error/ToFloat_3/x"
  input: "mean_squared_error/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/zeros_like"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/ones_like/Shape"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/ones_like"
  op: "Fill"
  input: "mean_squared_error/num_present/ones_like/Shape"
  input: "mean_squared_error/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/Select"
  op: "Select"
  input: "mean_squared_error/num_present/Equal"
  input: "mean_squared_error/num_present/zeros_like"
  input: "mean_squared_error/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error/Square"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error/Square"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  input: "^mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  input: "^mean_squared_error/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_squared_error/num_present/broadcast_weights/ones_like/Shape"
  input: "mean_squared_error/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/broadcast_weights"
  op: "Mul"
  input: "mean_squared_error/num_present/Select"
  input: "mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/num_present"
  op: "Sum"
  input: "mean_squared_error/num_present/broadcast_weights"
  input: "mean_squared_error/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/Const_1"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Sum_1"
  op: "Sum"
  input: "mean_squared_error/Sum"
  input: "mean_squared_error/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/Greater/y"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Greater"
  op: "Greater"
  input: "mean_squared_error/num_present"
  input: "mean_squared_error/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Equal/y"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/Equal"
  op: "Equal"
  input: "mean_squared_error/num_present"
  input: "mean_squared_error/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/ones_like/Shape"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/ones_like"
  op: "Fill"
  input: "mean_squared_error/ones_like/Shape"
  input: "mean_squared_error/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/Select"
  op: "Select"
  input: "mean_squared_error/Equal"
  input: "mean_squared_error/ones_like"
  input: "mean_squared_error/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/div"
  op: "RealDiv"
  input: "mean_squared_error/Sum_1"
  input: "mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/zeros_like"
  op: "Const"
  input: "^mean_squared_error/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean_squared_error/value"
  op: "Select"
  input: "mean_squared_error/Greater"
  input: "mean_squared_error/div"
  input: "mean_squared_error/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "OptimizeLoss/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/learning_rate/Assign"
  op: "Assign"
  input: "OptimizeLoss/learning_rate"
  input: "OptimizeLoss/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/learning_rate/read"
  op: "Identity"
  input: "OptimizeLoss/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Fill"
  op: "Fill"
  input: "OptimizeLoss/gradients/Shape"
  input: "OptimizeLoss/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/f_count_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Merge"
  op: "Merge"
  input: "OptimizeLoss/gradients/f_count_1"
  input: "OptimizeLoss/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/Merge"
  input: "rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Add/y"
  op: "Const"
  input: "^rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/Switch:1"
  input: "OptimizeLoss/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/Add"
  input: "^OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/f_count_2"
  op: "Exit"
  input: "OptimizeLoss/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/b_count_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Merge_1"
  op: "Merge"
  input: "OptimizeLoss/gradients/b_count_1"
  input: "OptimizeLoss/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "OptimizeLoss/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "OptimizeLoss/gradients/Merge_1"
  input: "OptimizeLoss/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/b_count_2"
  op: "LoopCond"
  input: "OptimizeLoss/gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Switch_1"
  op: "Switch"
  input: "OptimizeLoss/gradients/Merge_1"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Sub"
  op: "Sub"
  input: "OptimizeLoss/gradients/Switch_1:1"
  input: "OptimizeLoss/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/NextIteration_1"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/Sub"
  input: "^OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/b_count_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/value_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/value_grad/Select"
  op: "Select"
  input: "mean_squared_error/Greater"
  input: "OptimizeLoss/gradients/Fill"
  input: "OptimizeLoss/gradients/mean_squared_error/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/value_grad/Select_1"
  op: "Select"
  input: "mean_squared_error/Greater"
  input: "OptimizeLoss/gradients/mean_squared_error/value_grad/zeros_like"
  input: "OptimizeLoss/gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/mean_squared_error/value_grad/Select"
  input: "^OptimizeLoss/gradients/mean_squared_error/value_grad/Select_1"
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/value_grad/Select"
  input: "^OptimizeLoss/gradients/mean_squared_error/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/value_grad/Select_1"
  input: "^OptimizeLoss/gradients/mean_squared_error/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/Shape"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/RealDiv"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/mean_squared_error/value_grad/tuple/control_dependency"
  input: "mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/RealDiv"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/Neg"
  op: "Neg"
  input: "mean_squared_error/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/Neg"
  input: "mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/RealDiv_1"
  input: "mean_squared_error/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/mean_squared_error/value_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/mul"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/Sum_1"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/mean_squared_error/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/mean_squared_error/div_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/mean_squared_error/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/mean_squared_error/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/mean_squared_error/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sum_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sum_1_grad/Tile"
  op: "Tile"
  input: "OptimizeLoss/gradients/mean_squared_error/Sum_1_grad/Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/Sum_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Select_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Select_grad/Select"
  op: "Select"
  input: "mean_squared_error/Equal"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/mean_squared_error/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Select_grad/Select_1"
  op: "Select"
  input: "mean_squared_error/Equal"
  input: "OptimizeLoss/gradients/mean_squared_error/Select_grad/zeros_like"
  input: "OptimizeLoss/gradients/mean_squared_error/div_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/mean_squared_error/Select_grad/Select"
  input: "^OptimizeLoss/gradients/mean_squared_error/Select_grad/Select_1"
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/Select_grad/Select"
  input: "^OptimizeLoss/gradients/mean_squared_error/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/Select_grad/Select_1"
  input: "^OptimizeLoss/gradients/mean_squared_error/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sum_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/Sum_1_grad/Tile"
  input: "OptimizeLoss/gradients/mean_squared_error/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sum_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sum_grad/Tile"
  op: "Tile"
  input: "OptimizeLoss/gradients/mean_squared_error/Sum_grad/Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Shape"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/mean_squared_error/Sum_grad/Tile"
  input: "mean_squared_error/ToFloat_3/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/mul"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/mul_1"
  op: "Mul"
  input: "mean_squared_error/Square"
  input: "OptimizeLoss/gradients/mean_squared_error/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/mul_1"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/mean_squared_error/Mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/mean_squared_error/Mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/mean_squared_error/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/Select_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present_grad/Shape"
  op: "Shape"
  input: "mean_squared_error/num_present/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present_grad/Tile"
  op: "Tile"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present_grad/Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  op: "Shape"
  input: "mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present_grad/Tile"
  input: "mean_squared_error/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/mul"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/mul_1"
  op: "Mul"
  input: "mean_squared_error/num_present/Select"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/mul_1"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Sum_1"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  input: "^OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
  input: "^OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/mean_squared_error/num_present/broadcast_weights/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Square_grad/mul/x"
  op: "Const"
  input: "^OptimizeLoss/gradients/mean_squared_error/Mul_grad/tuple/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Square_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/mean_squared_error/Square_grad/mul/x"
  input: "mean_squared_error/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Square_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/mean_squared_error/Mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/mean_squared_error/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Shape"
  op: "Shape"
  input: "Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Shape_1"
  op: "Shape"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Shape"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/Square_grad/mul_1"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/mean_squared_error/Square_grad/mul_1"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Neg"
  op: "Neg"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Neg"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/mean_squared_error/Sub_grad/Reshape"
  input: "^OptimizeLoss/gradients/mean_squared_error/Sub_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Reshape"
  input: "^OptimizeLoss/gradients/mean_squared_error/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/mean_squared_error/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/mean_squared_error/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/mean_squared_error/Sub_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "OptimizeLoss/gradients/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "OptimizeLoss/gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/Reshape_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "OptimizeLoss/gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/Reshape_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^OptimizeLoss/gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "OptimizeLoss/gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape"
  input: "OptimizeLoss/gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/fully_connected/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/fully_connected/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/fully_connected/MatMul_grad/MatMul_1"
}
node {
  name: "OptimizeLoss/gradients/fully_connected/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/fully_connected/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "^OptimizeLoss/gradients/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Reshape_grad/Shape"
  op: "Shape"
  input: "rnn/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Reshape_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/fully_connected/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "rnn/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "OptimizeLoss/gradients/Reshape_grad/Reshape"
  input: "OptimizeLoss/gradients/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "rnn/TensorArray"
  input: "rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "OptimizeLoss/gradients"
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "rnn/while/Exit_1"
  input: "^OptimizeLoss/gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "OptimizeLoss/gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "rnn/TensorArrayStack/range"
  input: "OptimizeLoss/gradients/rnn/transpose_grad/transpose"
  input: "OptimizeLoss/gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like"
  op: "ZerosLike"
  input: "rnn/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "rnn/while/Exit_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "rnn/while/Exit_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "rnn/while/Exit_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "rnn/while/Exit_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "rnn/while/Exit_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "rnn/while/Exit_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "rnn/while/Exit_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "rnn/while/Exit_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "rnn/while/Exit_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_7_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_8_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_9_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_10_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_11_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_12_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Exit_13_grad/b_exit"
  op: "Enter"
  input: "OptimizeLoss/gradients/zeros_like_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_1_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_2_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_3_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_4_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_5_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_5_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_6_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_6_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_7_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_7_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_7_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_8_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_8_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_8_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_9_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_9_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_9_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_10_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_10_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_10_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_11_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_11_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_11_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_12_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_12_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_12_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_13_grad/b_switch"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/Exit_13_grad/b_exit"
  input: "OptimizeLoss/gradients/rnn/while/Switch_13_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_1_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_1_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_1_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_1_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_2_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_2_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_2_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_3_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_3_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_3_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_4_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_4_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_4_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_5_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_5_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_5_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_5_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_6_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_6_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_6_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_6_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_7_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_7_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_7_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_7_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_7_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_8_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_8_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_8_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_8_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_8_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_9_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_9_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_9_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_9_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_9_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_9_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_9_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_9_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_10_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_10_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_10_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_10_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_10_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_10_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_10_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_10_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_11_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_11_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_11_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_11_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_11_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_11_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_11_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_11_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_12_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_12_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_12_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_12_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_12_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_12_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_12_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_12_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_13_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/Switch_13_grad/b_switch"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_13_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_13_grad/Switch"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_13_grad/Switch"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_13_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Merge_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_13_grad/Switch:1"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_13_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_4_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_5_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_7_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_8_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_9_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_10_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_10_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_11_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_11_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_12_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Enter_13_grad/Exit"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/Merge_13_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "OptimizeLoss/gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "OptimizeLoss/gradients"
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "rnn/while/Identity"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Floor"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/dropout/keep_prob"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg"
  op: "Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_13_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_13_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/AddN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_1"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_12_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_12_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/Identity_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/Identity_12"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_12"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_12_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split/split_dim"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/add_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat/axis"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/Identity_13"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_13"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Floor"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/dropout/keep_prob"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg"
  op: "Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_13_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_2"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_11_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_11_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/AddN_2"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_3"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_10_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_10_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_3"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_3"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/Identity_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/Identity_10"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_10"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_10_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split/split_dim"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/add_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat/axis"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/Identity_11"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_11"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Floor"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/dropout/keep_prob"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg"
  op: "Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_11_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_4"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_9_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_9_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/AddN_4"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_5"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_8_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_5"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_5"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/Identity_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/Identity_8"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_8_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split/split_dim"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/add_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat/axis"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/Identity_9"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Floor"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/dropout/keep_prob"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg"
  op: "Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_9_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_6"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_7_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/AddN_6"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_7"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_6_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_7"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_7"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/Identity_6"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split/split_dim"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/add_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat/axis"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/Identity_7"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  op: "Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_7_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_8"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_5_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/AddN_8"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_9"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_9"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_9"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/Identity_4"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/add_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 60
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/Identity_5"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  op: "Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_10"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/AddN_10"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/AddN_11"
  op: "AddN"
  input: "OptimizeLoss/gradients/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_11"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/AddN_11"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  input: "rnn/while/Identity_2"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/RefEnter_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape"
  op: "Shape"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Sum_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/add_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 31
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  op: "Const"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/RefEnter"
  input: "rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  op: "FloorMod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Shape"
  op: "Shape"
  input: "rnn/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter"
  input: "rnn/while/TensorArrayReadV3"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/RefEnter_1"
  input: "rnn/while/Identity_3"
  input: "^OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  op: "ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/mod"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  op: "Slice"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ConcatOffset:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
  input: "^OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "OptimizeLoss/gradients/rnn/while/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_2"
  input: "OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  op: "Add"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch:1"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss/loss"
      }
    }
  }
}
node {
  name: "OptimizeLoss/loss"
  op: "ScalarSummary"
  input: "OptimizeLoss/loss/tags"
  input: "mean_squared_error/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "OptimizeLoss/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/beta1_power/Assign"
  op: "Assign"
  input: "OptimizeLoss/beta1_power"
  input: "OptimizeLoss/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/beta1_power/read"
  op: "Identity"
  input: "OptimizeLoss/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "OptimizeLoss/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/beta2_power/Assign"
  op: "Assign"
  input: "OptimizeLoss/beta2_power"
  input: "OptimizeLoss/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/beta2_power/read"
  op: "Identity"
  input: "OptimizeLoss/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 60
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/fully_connected/weights/Adam"
  input: "OptimizeLoss/fully_connected/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/weights/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/fully_connected/weights/Adam_1"
  input: "OptimizeLoss/fully_connected/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/biases/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/fully_connected/biases/Adam"
  input: "OptimizeLoss/fully_connected/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/biases/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/fully_connected/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/biases/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/fully_connected/biases/Adam_1"
  input: "OptimizeLoss/fully_connected/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/fully_connected/biases/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/fully_connected/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_0/cell_0/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_1/cell_1/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_2/cell_2/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_3/cell_3/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_4/cell_4/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/rnn/while/rnn/multi_rnn_cell/cell_5/cell_5/basic_lstm_cell/basic_lstm_cell/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "OptimizeLoss/fully_connected/weights/Adam"
  input: "OptimizeLoss/fully_connected/weights/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_fully_connected/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/biases"
  input: "OptimizeLoss/fully_connected/biases/Adam"
  input: "OptimizeLoss/fully_connected/biases/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/mul"
  op: "Mul"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/train/beta1"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_fully_connected/weights/ApplyAdam"
  input: "^OptimizeLoss/train/update_fully_connected/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/Assign"
  op: "Assign"
  input: "OptimizeLoss/beta1_power"
  input: "OptimizeLoss/train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/train/mul_1"
  op: "Mul"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/train/beta2"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_fully_connected/weights/ApplyAdam"
  input: "^OptimizeLoss/train/update_fully_connected/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/Assign_1"
  op: "Assign"
  input: "OptimizeLoss/beta2_power"
  input: "OptimizeLoss/train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/train/update"
  op: "NoOp"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/ApplyAdam"
  input: "^OptimizeLoss/train/update_rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/ApplyAdam"
  input: "^OptimizeLoss/train/update_fully_connected/weights/ApplyAdam"
  input: "^OptimizeLoss/train/update_fully_connected/biases/ApplyAdam"
  input: "^OptimizeLoss/train/Assign"
  input: "^OptimizeLoss/train/Assign_1"
}
node {
  name: "OptimizeLoss/train/value"
  op: "Const"
  input: "^OptimizeLoss/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/train"
  op: "AssignAdd"
  input: "global_step"
  input: "OptimizeLoss/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/control_dependency"
  op: "Identity"
  input: "mean_squared_error/value"
  input: "^OptimizeLoss/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean_squared_error/value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Assign"
  input: "^rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Assign"
  input: "^rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/biases/Assign"
  input: "^OptimizeLoss/learning_rate/Assign"
  input: "^OptimizeLoss/beta1_power/Assign"
  input: "^OptimizeLoss/beta2_power/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam/Assign"
  input: "^OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1/Assign"
  input: "^OptimizeLoss/fully_connected/weights/Adam/Assign"
  input: "^OptimizeLoss/fully_connected/weights/Adam_1/Assign"
  input: "^OptimizeLoss/fully_connected/biases/Adam/Assign"
  input: "^OptimizeLoss/fully_connected/biases/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "fully_connected/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "fully_connected/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/fully_connected/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/fully_connected/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/fully_connected/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/fully_connected/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  attr {
    key: "N"
    value {
      i: 46
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 46
          }
        }
        string_val: "global_step"
        string_val: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/biases"
        string_val: "OptimizeLoss/learning_rate"
        string_val: "OptimizeLoss/beta1_power"
        string_val: "OptimizeLoss/beta2_power"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/fully_connected/weights/Adam"
        string_val: "OptimizeLoss/fully_connected/weights/Adam_1"
        string_val: "OptimizeLoss/fully_connected/biases/Adam"
        string_val: "OptimizeLoss/fully_connected/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 46
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 46
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "fully_connected/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "fully_connected/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/fully_connected/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/fully_connected/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/fully_connected/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/fully_connected/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  attr {
    key: "N"
    value {
      i: 46
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 46
          }
        }
        string_val: "global_step"
        string_val: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/biases"
        string_val: "OptimizeLoss/learning_rate"
        string_val: "OptimizeLoss/beta1_power"
        string_val: "OptimizeLoss/beta2_power"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/fully_connected/weights/Adam"
        string_val: "OptimizeLoss/fully_connected/weights/Adam_1"
        string_val: "OptimizeLoss/fully_connected/biases/Adam"
        string_val: "OptimizeLoss/fully_connected/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 46
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 46
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "OptimizeLoss/loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_f8a109ce20194b74b614e79b3053ca88/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 46
          }
        }
        string_val: "OptimizeLoss/beta1_power"
        string_val: "OptimizeLoss/beta2_power"
        string_val: "OptimizeLoss/fully_connected/biases/Adam"
        string_val: "OptimizeLoss/fully_connected/biases/Adam_1"
        string_val: "OptimizeLoss/fully_connected/weights/Adam"
        string_val: "OptimizeLoss/fully_connected/weights/Adam_1"
        string_val: "OptimizeLoss/learning_rate"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
        string_val: "fully_connected/biases"
        string_val: "fully_connected/weights"
        string_val: "global_step"
        string_val: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
        string_val: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
        string_val: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 46
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 46
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "OptimizeLoss/beta1_power"
  input: "OptimizeLoss/beta2_power"
  input: "OptimizeLoss/fully_connected/biases/Adam"
  input: "OptimizeLoss/fully_connected/biases/Adam_1"
  input: "OptimizeLoss/fully_connected/weights/Adam"
  input: "OptimizeLoss/fully_connected/weights/Adam_1"
  input: "OptimizeLoss/learning_rate"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
  input: "fully_connected/biases"
  input: "fully_connected/weights"
  input: "global_step"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "OptimizeLoss/beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "OptimizeLoss/beta2_power"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/fully_connected/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "OptimizeLoss/fully_connected/biases/Adam"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/fully_connected/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "OptimizeLoss/fully_connected/biases/Adam_1"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "OptimizeLoss/fully_connected/weights/Adam"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "OptimizeLoss/fully_connected/weights/Adam_1"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/learning_rate"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "OptimizeLoss/learning_rate"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias/Adam_1"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "OptimizeLoss/rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel/Adam_1"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "fully_connected/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "fully_connected/biases"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_3/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_4/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@rnn/multi_rnn_cell/cell_5/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 60
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 22
}
